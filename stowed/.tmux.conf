set -g default-terminal "${TERM}"
set -sa terminal-overrides ',xterm-256color:RGB'
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

set -g prefix C-a
bind a send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Remove bg
set-option -g status-style bg=default

# Screen like binding for last window
# Screen like binding
unbind C-b # Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
# set -g default-terminal "screen-256color"

unbind l
bind C-a last-window

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
# set -g default-terminal screen-256color
# set -ga terminal-overrides ",alacritty:Tc"
# set -g default-terminal xterm-256color
# set -g default-terminal "alacritty"
# set -ga terminal-overrides ",xterm-256color:Tc"
# set -g default-terminal "screen.xterm-256color"
set -g status-position bottom

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Local config
# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Smart pane switching with awareness of vim splits.
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?l?vim?x?)(diff)?$"'

# Mouse Support
set-option -g mouse on
set -g mouse on

set-option -g base-index 1
set-window-option -g pane-base-index 1
set-window-option -g mouse on
set-option -g renumber-windows on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow,
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
# bind -n C-k send-keys -R \; clear-history

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# styling
set -g status-fg "#a9b1d6"
set -g status-right ""
set -g status-left ""
set -g status-justify centre
set -g window-status-current-format "#[fg=magenta]#[fg=black]#[bg=magenta]#I #[bg=brightblack]#[fg=white] #W#[fg=brightblack]#[bg=black]"
set -g window-status-format "#[fg=yellow]#[fg=black]#[bg=yellow]#I #[bg=brightblack]#[fg=white] #W#[fg=brightblack]#[bg=black]"

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"
